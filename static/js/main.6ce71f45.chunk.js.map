{"version":3,"sources":["services/TodoService.tsx","contexts/TodoContext.tsx","components/Navbar.tsx","components/TodoListitem.tsx","components/TodoList.tsx","components/AddTodo.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["TODO_STORE","get","data","localStorage","getItem","JSON","parse","TodoContext","createContext","todos","addTodo","removeTodo","toggle","TodoProvider","props","useState","setTodos","useEffect","length","setItem","stringify","Provider","value","title","todo","id","done","index","indexOf","filter","_","i","children","Navbar","className","to","TodoListItem","useContext","type","checked","onChange","event","onClick","TodoList","map","schema","yup","shape","required","AddTodo","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","onSubmit","e","target","reset","window","location","href","name","placeholder","message","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ce71f45.chunk.js","sourcesContent":["import {Todo} from \"../models/Todo\";\r\n\r\nconst TODO_STORE = 'todos';\r\n\r\nexport const get = (): Todo[] =>{\r\n    const data = localStorage.getItem(TODO_STORE) || '';\r\n    try {\r\n        const result = JSON.parse(data) as Todo[];\r\n        return result;\r\n    } catch{\r\n        return [];\r\n    }\r\n}\r\n\r\nexport const save = (data: Todo[]) => {\r\n    if (data?.length >=0 ) localStorage.setItem(TODO_STORE, JSON.stringify(data));\r\n}","import React, { createContext, useEffect, useState } from \"react\";\r\nimport { Todo } from \"../models/Todo\";\r\nimport { get, save } from \"../services/TodoService\";\r\nimport { TodoContextType } from \"./TodoContextType\";\r\n\r\nexport const TodoContext = createContext<TodoContextType>({\r\n  todos: [],\r\n  addTodo: () => {},\r\n  removeTodo: () => {},\r\n  toggle: () => {},\r\n});\r\n\r\nconst TodoProvider = (props: any) => {\r\n    const [todos, setTodos] = useState<Todo[]>(get);\r\n\r\n    useEffect(() => {\r\n       save(todos);\r\n    }, [todos])\r\n\r\n    const addTodo = (title: string) => {\r\n        const todo: Todo = {id: todos.length + 1, title: title, done: false};\r\n        setTodos([...todos, todo]);\r\n\r\n    }\r\n    const removeTodo = (todo: Todo) => {\r\n        const index = todos.indexOf(todo);\r\n        setTodos(todos.filter((_, i)=> i !== index));\r\n    }\r\n      \r\n    const toggle = (todo: Todo) => {\r\n        const index = todos.indexOf(todo);\r\n        todos[index].done = !todo.done;\r\n        setTodos([...todos]);\r\n   \r\n    }\r\n\r\n\r\n    return(\r\n        <TodoContext.Provider value={\r\n            {todos, addTodo, removeTodo, toggle}\r\n        }>\r\n            {props.children}\r\n        </TodoContext.Provider>\r\n    );\r\n}\r\n\r\nexport default TodoProvider;\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <div className=\"uk-container\">\r\n      <nav className=\"uk-navbar\">\r\n        <div className=\"uk-navbar-left\"></div>\r\n        <Link to=\"/\" className=\"uk-navbar-item uk-logo\">\r\n          My Todos\r\n        </Link>\r\n        <div className=\"uk-navbar-right\">\r\n          <ul className=\"uk-navbar-nav\">\r\n            <li>\r\n              <Link to=\"/create\">\r\n                <span uk-icon=\"icon: plus; ratio: 1.2\"></span>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useContext } from \"react\";\r\nimport { TodoContextType } from \"../contexts/TodoContextType\";\r\nimport {TodoContext} from '../contexts/TodoContext';\r\nimport { Todo } from \"../models/Todo\";\r\n\r\ninterface TodoListItemProps {\r\n  todo: Todo;\r\n}\r\n\r\nconst TodoListItem = (props: TodoListItemProps) => {\r\n  const {removeTodo, toggle} = useContext<TodoContextType>(TodoContext);\r\n\r\n  const onRemove = (todo: Todo) => {\r\n      removeTodo(todo);\r\n  };\r\n\r\n  const handleChange = (event: any) => {\r\n    toggle(props.todo);\r\n  };\r\n\r\n  return (\r\n    <tr className=\"uk-animation-slide-bottom-medium\">\r\n      <td className=\"uk-width-auto\">\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            className=\"uk-checkbox\"\r\n            checked={props.todo.done}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n      </td>\r\n      <td className=\"uk-width-expand\">{props.todo.title}</td>\r\n      <td className=\"uk-width-auto\">\r\n        <button\r\n          className=\"uk-icon-button uk-button-danger\"\r\n          uk-icon=\"trash\"\r\n          onClick={() => onRemove(props.todo)}\r\n        ></button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default TodoListItem;\r\n","import React, { useContext } from \"react\";\r\nimport { TodoContext } from \"../contexts/TodoContext\";\r\nimport { TodoContextType } from \"../contexts/TodoContextType\";\r\nimport TodoListItem from \"./TodoListitem\";\r\n\r\nconst TodoList = () => {\r\n  const { todos } = useContext<TodoContextType>(TodoContext);\r\n\r\n  return (\r\n    <table className=\"uk-table\">\r\n      <caption>Lista de tarefas</caption>\r\n      <thead>\r\n        <tr>\r\n          <th>#</th>\r\n          <th>Tarefas</th>\r\n          <th></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {todos?.map((todo) => (\r\n          <TodoListItem key={todo.id} todo={todo}></TodoListItem>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","  \r\nimport React, { useContext } from 'react';\r\nimport { TodoContext } from '../contexts/TodoContext';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport { TodoContextType } from '../contexts/TodoContextType';\r\n\r\n\r\n\r\nconst schema = yup.object().shape({\r\n    title: yup.string().required('Tarefa invÃ¡lida'),\r\n});\r\n\r\ninterface AddTodoForm {\r\n    title: string\r\n}\r\n\r\nconst AddTodo = () => {\r\n    const { addTodo } = useContext<TodoContextType>(TodoContext);\r\n    const { register, handleSubmit, formState: {errors}} = useForm({\r\n        resolver: yupResolver(schema),\r\n    });\r\n\r\n    const onSubmit = (data: AddTodoForm, e: any) => {\r\n        addTodo(data.title);\r\n        e.target.reset();\r\n        window.location.href = 'https://gbrolling.github.io/todo-react/#/';\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit<AddTodoForm>(onSubmit)}>\r\n            <h4>Nova tarefa</h4>\r\n            <div className=\"uk-margin uk-width-1-1\">\r\n                <input  {...register('title')} type=\"text\" name=\"title\" id=\"title\" placeholder=\"Nova tarefa...\" className=\"uk-input\"/>\r\n                <span><small><strong className=\"uk-text-danger\">{errors.title?.message}</strong></small></span>\r\n            </div>\r\n            <div className=\"uk-width-1-1\">\r\n                <button type=\"submit\" className=\"uk-button uk-button-primary\">Salvar</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default AddTodo;\r\n","/* eslint-disable react/jsx-no-undef */\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, HashRouter } from \"react-router-dom\";\r\nimport TodoContext from \"../contexts/TodoContext\";\r\nimport Navbar from \"./Navbar\";\r\nimport TodoList from \"./TodoList\";\r\nimport AddTodo from \"./AddTodo\"\r\n\r\nconst App = () => {\r\n  return (\r\n    <TodoContext>\r\n      <HashRouter>\r\n      <Navbar></Navbar>\r\n      <div className=\"uk-container\">\r\n        <Switch>\r\n          <Route path=\"/create\">\r\n           <AddTodo></AddTodo>\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <h4>Minha lista de tarefas</h4>\r\n            <TodoList></TodoList>\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n      </HashRouter>\r\n    </TodoContext>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}